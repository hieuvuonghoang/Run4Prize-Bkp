// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Run4Prize.Models.DBContexts.AppContext;

#nullable disable

namespace Run4Prize.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Distance")
                        .HasColumnType("double");

                    b.Property<string>("MapUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<double>("MovingTime")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("MemberId");

                    b.ToTable("Activities", (string)null);
                });

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Distance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalDistance")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Distances", (string)null);
                });

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mess")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Settings", (string)null);
                });

            modelBuilder.Entity("Run4Prize.Models.DBContexts.AppContext.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Rank")
                        .HasColumnType("double");

                    b.Property<double>("TotalDistance")
                        .HasColumnType("double");

                    b.Property<string>("Uid")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
